// ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô global variable
let allProducts = []
// =========================================
// Products Page Functions
// =========================================

// Navigation Functions
function goToDashboard() {
    window.location.href = '/pages/admin/dashboard.html'
}

function goToCustomers() {
    window.location.href = '/pages/customer/customers.html'
}

function goToProducts() {
    window.location.href = '/pages/product/products.html'
}

function goToAdmin() {
    window.location.href = '/pages/admin/admin.html'
}

function goHome() {
    window.location.href = '/pages/pos/index.html'
}


// =========================================
// Role & Permission Functions
// =========================================

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ó‡∏∏‡∏Å role ‡πÑ‡∏î‡πâ)
function canAddProducts() {
    const user = JSON.parse(localStorage.getItem('user') || '{}')
    return user.role === 'user' || user.role === 'employee' || user.role === 'admin'
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user)
function canEditDeleteProducts() {
    const user = JSON.parse(localStorage.getItem('user') || '{}')
    return user.role === 'user' // ‡πÅ‡∏Ñ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å (‡∏ó‡∏∏‡∏Å role ‡πÑ‡∏î‡πâ)
function canManageStock() {
    const user = JSON.parse(localStorage.getItem('user') || '{}')
    return user.role === 'user' || user.role === 'employee' || user.role === 'admin'
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á UI ‡∏ï‡∏≤‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
function initPermissions() {
    const user = JSON.parse(localStorage.getItem('user') || '{}')
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - ‡∏ó‡∏∏‡∏Å role ‡πÑ‡∏î‡πâ
    if (!canAddProducts()) {
        const addProductBtn = document.getElementById('add-product-btn')
        if (addProductBtn) {
            addProductBtn.style.display = 'none'
        }
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    const sidebar = document.querySelector('.sidebar')
    if (sidebar) {
        const permissionMsg = document.createElement('div')
        permissionMsg.style.cssText = `
            background: #e8f4fd;
            border: 1px solid #bee5eb;
            border-radius: 4px;
            padding: 10px;
            margin: 10px 0;
            font-size: 12px;
            color: #0c5460;
            text-align: center;
        `
        
        let permissionText = `<strong>üë§ ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</strong><br>Role: ${user.role}<br>`
        
        if (user.role === 'user') {
            permissionText += `<small>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ<br>‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏î‡πâ</small>`
        } else if (user.role === 'employee') {
            permissionText += `<small>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ<br>‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏î‡πâ<br>‚ùå ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ</small>`
        } else {
            permissionText += `<small>‚ùå ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ</small>`
        }
        
        permissionMsg.innerHTML = permissionText
        sidebar.insertBefore(permissionMsg, sidebar.firstChild.nextSibling)
    }
    
    console.log(`üìù User role: ${user.role}`)
    console.log(`‚úÖ Can add products: ${canAddProducts()}`)
    console.log(`‚úÖ Can edit/delete: ${canEditDeleteProducts()}`)
    console.log(`‚úÖ Can manage stock: ${canManageStock()}`)
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user)
function editProduct(productId) {
    if (!canEditDeleteProducts()) {
        showNoPermissionMessage('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')
        return
    }
    
    console.log(`‚úèÔ∏è Editing product ID: ${productId}`)
    alert('üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤)')
}

// ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user)
function deleteProduct(productId, productName = '') {
    if (!canEditDeleteProducts()) {
        showNoPermissionMessage('‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')
        return
    }
    
    const confirmMessage = productName 
        ? `‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ "${productName}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`
        : `‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ ${productId} ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`
    
    if (!confirm(`üóëÔ∏è ${confirmMessage}\n\n‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ`)) {
        return
    }
    
    console.log(`üóëÔ∏è Deleting product ID: ${productId}`)
    alert('üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤)')
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ó‡∏∏‡∏Å role ‡πÑ‡∏î‡πâ)
function manageStock(productId) {
    if (!canManageStock()) {
        showNoPermissionMessage('‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')
        return
    }
    
    console.log(`üì¶ Managing stock for product ID: ${productId}`)
    alert('üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤)')
}

// ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ó‡∏∏‡∏Å role ‡πÑ‡∏î‡πâ)
function addStock(productId) {
    if (!canManageStock()) {
        showNoPermissionMessage('‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')
        return
    }
    
    const quantity = prompt('üì¶ ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°:')
    
    if (quantity && !isNaN(quantity) && parseInt(quantity) > 0) {
        console.log(`üì¶ Adding ${quantity} items to product ID: ${productId}`)
        alert(`‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å ${quantity} ‡∏ä‡∏¥‡πâ‡∏ô ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! (‡∏à‡∏≥‡∏•‡∏≠‡∏á)`)
        
        // TODO: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å
    } else {
        alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
    }
}




// =========================================
// Popup Functions
// =========================================

// ‡πÄ‡∏õ‡∏¥‡∏î popup ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
async function openAddProductPopup() {

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    if (!canAddProducts()) {
        showNoPermissionMessage('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')
        return
    }

    try {
        console.log('üîÑ Loading add product form...')
        
        // ‡πÅ‡∏™‡∏î‡∏á loading
        const popup = document.getElementById('add-product-popup')
        const popupContent = document.getElementById('add-product-popup-content')
        
        popupContent.innerHTML = '<div style="text-align: center; padding: 50px;">üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>'
        popup.classList.remove('hidden')
        
        // ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏≤‡∏Å add-product.html
        const response = await fetch('/pages/product/add-product.html')
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`)
        }
        
        const htmlContent = await response.text()
        
        // ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ body content ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤
        const parser = new DOMParser()
        const doc = parser.parseFromString(htmlContent, 'text/html')
        const bodyContent = doc.body.innerHTML
        
        // ‡πÉ‡∏™‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô popup
        popupContent.innerHTML = bodyContent
        
        // ‡πÇ‡∏´‡∏•‡∏î CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö add-product (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        if (!document.querySelector('link[href*="add-products.css"]')) {
            const link = document.createElement('link')
            link.rel = 'stylesheet'
            link.href = '../../styles/pages/add-products.css'
            document.head.appendChild(link)
        }
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö form handling
        initAddProductForm()
        
        console.log('‚úÖ Add product form loaded successfully')
        
    } catch (error) {
        console.error('‚ùå Error loading add product form:', error)
        
        const popupContent = document.getElementById('add-product-popup-content')
        popupContent.innerHTML = `
            <div style="text-align: center; padding: 50px; color: red;">
                <h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>
                <p>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ</p>
                <button onclick="closeAddProductPopup()" style="margin-top: 10px; padding: 8px 16px; background: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer;">
                    ‡∏õ‡∏¥‡∏î
                </button>
            </div>
        `
    }
}

// ‡∏õ‡∏¥‡∏î popup ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function closeAddProductPopup() {
    const popup = document.getElementById('add-product-popup')
    popup.classList.add('hidden')
    
    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ popup
    const popupContent = document.getElementById('add-product-popup-content')
    popupContent.innerHTML = ''
    
    console.log('üö´ Add product popup closed')
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô form handling ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function initAddProductForm() {
    const form = document.getElementById('product-form')
    
    if (form) {
        // ‡∏•‡∏ö event listener ‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        form.removeEventListener('submit', handleAddProduct)
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
        form.addEventListener('submit', handleAddProduct)
        
        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ image preview
        const imageInput = document.getElementById('image')
        if (imageInput) {
            imageInput.addEventListener('change', handleImagePreview)
        }
        
        console.log('üìù Add product form initialized')
    }
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
async function handleAddProduct(event) {
    event.preventDefault()
    
    console.log('üìù Submitting add product form...')
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å form elements ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    const productData = {
        name: document.getElementById('name')?.value.trim() || '',
        barcode: document.getElementById('barcode')?.value.trim() || '',
        price: parseFloat(document.getElementById('retail_price')?.value || 0),
        wholesale_price: parseFloat(document.getElementById('wholesale_price')?.value || 0),
        credit_price: parseFloat(document.getElementById('credit_price')?.value || 0),
        wholesale_minimum: parseInt(document.getElementById('wholesale_minimum')?.value || 1),
        stock: parseInt(document.getElementById('stock')?.value || 0),
        category: document.getElementById('category')?.value.trim() || '',
        description: document.getElementById('description')?.value.trim() || ''
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Base64 image (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const imageBase64 = document.getElementById('image-base64')?.value
    if (imageBase64) {
        productData.image_base64 = imageBase64
    }
    
    // Validation
    if (!productData.name || !productData.barcode || !productData.price || !productData.category) {
        alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô')
        return
    }
    
    try {
        // ‡πÅ‡∏™‡∏î‡∏á loading ‡∏ö‡∏ô submit button
        const submitBtn = document.getElementById('submit-btn')
        if (!submitBtn) {
            throw new Error('Submit button not found')
        }
        
        const originalText = submitBtn.textContent
        submitBtn.disabled = true
        submitBtn.textContent = 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...'
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        console.log('üì§ Sending product data to API:', productData)
        
        const token = localStorage.getItem('token')
        const response = await fetch('/api/products', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(productData)
        })
        
        const result = await response.json()
        console.log('üì• API Response:', result)
        
        if (result.success) {
            alert('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï form
            document.getElementById('product-form').reset()
            clearImagePreview()
            
            // ‡∏õ‡∏¥‡∏î popup
            closeAddProductPopup()
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
            loadProducts()
            
        } else {
            alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + result.message)
        }
        
    } catch (error) {
        console.error('‚ùå Error adding product:', error)
        alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: ' + error.message)
    } finally {
        // ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°
        const submitBtn = document.getElementById('submit-btn')
        if (submitBtn) {
            submitBtn.disabled = false
            submitBtn.textContent = '‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'
        }
    }
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ image preview
function handleImagePreview(event) {
    const file = event.target.files[0]
    const previewContainer = document.getElementById('image-preview-container')
    const base64Input = document.getElementById('image-base64')
    
    if (file) {
        const reader = new FileReader()
        
        reader.onload = function(e) {
            const base64String = e.target.result
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ
            previewContainer.innerHTML = `
                <div style="margin-top: 10px;">
                    <p style="font-size: 14px; color: #666; margin-bottom: 5px;">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:</p>
                    <img src="${base64String}" style="max-width: 200px; max-height: 200px; border: 1px solid #ddd; border-radius: 4px;">
                    <button type="button" onclick="clearImagePreview()" style="display: block; margin-top: 5px; padding: 4px 8px; background: #dc3545; color: white; border: none; border-radius: 3px; font-size: 12px; cursor: pointer;">
                         ‡∏•‡∏ö‡∏£‡∏π‡∏õ
                    </button>
                </div>
            `
            
            // ‡πÄ‡∏Å‡πá‡∏ö Base64 string
            if (base64Input) {
                base64Input.value = base64String
            }
        }
        
        reader.readAsDataURL(file)
    }
}

// ‡∏•‡∏ö image preview
function clearImagePreview() {
    document.getElementById('image-preview-container').innerHTML = ''
    document.getElementById('image').value = ''
    document.getElementById('image-base64').value = ''
}

// =========================================
// Auth Functions
// =========================================

function checkAuth() {
    const token = localStorage.getItem('token')
    if (!token) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô')
        window.location.href = '/login.html'
        return false
    }
    return true
}

function updateProfileButton() {
    const user = JSON.parse(localStorage.getItem('user') || '{}')
    const profileBtn = document.getElementById('profile-btn')
    
    if (profileBtn && user.username) {
        profileBtn.textContent = `üë§ ${user.username}`
    }
}

// =========================================
// Products Loading Function (‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ error)
// =========================================

// ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å API

// ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å API
async function loadProducts() {
    try {
        console.log('üîÑ Loading products from API...')
        
        // ‡∏î‡∏∂‡∏á user ID ‡∏à‡∏≤‡∏Å localStorage
        const user = JSON.parse(localStorage.getItem('user') || '{}')
        const userId = user._id || user.id  // ‡πÉ‡∏ä‡πâ user ID ‡πÅ‡∏ó‡∏ô username
        
        if (!userId) {
            throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ID')
        }
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏û‡∏£‡πâ‡∏≠‡∏° user ID
        const token = localStorage.getItem('token')
        const response = await fetch(`/api/products?userId=${userId}`, {  // ‚Üê ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô userId
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        })
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`)
        }
        
        const result = await response.json()
        console.log('üì• Products loaded:', result)
        
        if (result.success && result.data) {
            allProducts = result.data
            displayProducts(result.data)
        } else {
            displayProducts([])
        }
        
    } catch (error) {
        console.error('‚ùå Error loading products:', error)
        
        const productsContainer = document.getElementById('products-container')
        if (productsContainer) {
            productsContainer.innerHTML = `
                <div style="padding: 20px; color: red;">
                    ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ: ${error.message}
                </div>
            `
        }
    }
}



// ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô cards
function displayProducts(products) {
    const productsContainer = document.getElementById('products-container')
    
    if (!productsContainer) {
        console.error('‚ùå Products container not found')
        return
    }
    
    if (!products || products.length === 0) {
        productsContainer.innerHTML = `
            <div style="grid-column: 1 / -1; text-align: center; padding: 50px; color: #666;">
                <h3>üì¶ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
                <p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢</p>
                <button onclick="openAddProductPopup()" style="margin-top: 10px; padding: 10px 20px; background: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer;">
                    ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏£‡∏Å
                </button>
            </div>
        `
        return
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    const productsHTML = products.map(product => {
        const imageUrl = product.image_base64 || '/images/no-image.png'
        const stockClass = product.stock <= 10 ? 'low-stock' : ''
        
        return `
            <div class="product-card" onclick="showProductDetails('${product._id}')" data-id="${product._id}">
                <img src="${imageUrl}" alt="${product.name}" onerror="this.src='/images/no-image.png'">
                <h3>${product.name}</h3>
                <p class="barcode">‡∏£‡∏´‡∏±‡∏™: ${product.barcode}</p>
                <p class="stock ${stockClass}">‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${product.stock} ‡∏ä‡∏¥‡πâ‡∏ô</p>
                <p class="price">‡∏ø${product.price.toLocaleString()}</p>
            </div>
        `
    }).join('')
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    productsContainer.innerHTML = productsHTML
    
    console.log(`‚úÖ Displayed ${products.length} products as cards`)
}


// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function showProductDetails(productId) {
    console.log(`üëÅÔ∏è Showing details for product ID: ${productId}`)
    
    // ‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
    const product = allProducts.find(p => p._id === productId)
    if (product) {
        displayProductPopup(product)
    } else {
        alert('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')
    }
}
// ‡πÅ‡∏™‡∏î‡∏á popup ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function displayProductPopup(product) {
    const popup = document.getElementById('popup')
    const popupInfo = document.getElementById('popup-info')
    
    if (!popup || !popupInfo) {
        console.error('‚ùå Product detail popup elements not found')
        return
    }
    
    const imageUrl = product.image_base64 || '/images/no-image.png'
    const canEdit = canEditDeleteProducts()
    
    popupInfo.innerHTML = `
        <img src="${imageUrl}" alt="${product.name}" style="max-width: 100%; height: auto; border-radius: 8px; margin-bottom: 15px;">
        <h2>${product.name}</h2>
        <p><strong>‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</strong> ${product.barcode}</p>
        <p><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> ${product.category}</p>
        <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏õ‡∏•‡∏µ‡∏Å:</strong> ‡∏ø${product.price.toLocaleString()}</p>
        <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏á:</strong> ‡∏ø${product.wholesale_price.toLocaleString()}</p>
        <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï:</strong> ‡∏ø${product.credit_price.toLocaleString()}</p>
        <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ (‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏á):</strong> ${product.wholesale_minimum} ‡∏ä‡∏¥‡πâ‡∏ô</p>
        <p><strong>‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</strong> <span style="color: ${product.stock <= 10 ? '#dc3545' : '#28a745'}; font-weight: bold;">${product.stock} ‡∏ä‡∏¥‡πâ‡∏ô</span></p>
        ${product.description ? `<p><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong> ${product.description}</p>` : ''}
        
        <div style="display: flex; gap: 10px; margin-top: 20px; flex-wrap: wrap;">
            <button onclick="addStock('${product._id}')" style="background: #007bff; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;">
                üì¶ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å
            </button>
            ${canEdit ? `
                <button onclick="editProduct('${product._id}')" style="background: #28a745; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;">
                    ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                </button>
                <button onclick="deleteProduct('${product._id}', '${product.name}')" style="background: #dc3545; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;">
                    üóëÔ∏è ‡∏•‡∏ö
                </button>
            ` : ''}
        </div>
    `
    
    popup.classList.remove('hidden')
}

// ‡∏õ‡∏¥‡∏î popup ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function closePopup() {
    const popup = document.getElementById('popup')
    if (popup) {
        popup.classList.add('hidden')
    }
}

// =========================================
// Category Functions
// =========================================

// ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏≤‡∏Å API
async function loadCategories() {
    try {
        console.log('üîÑ Loading categories from API...')
        
        // ‡∏î‡∏∂‡∏á user ID
        const user = JSON.parse(localStorage.getItem('user') || '{}')
        const userId = user._id || user.id
        
        const token = localStorage.getItem('token')
        const response = await fetch(`/api/products/categories?userId=${userId}`, {  // ‚Üê ‡πÄ‡∏û‡∏¥‡πà‡∏° userId
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        })
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`)
        }
        
        const result = await response.json()
        console.log('üì• Categories loaded:', result)
        
        if (result.success && result.data) {
            displayCategories(result.data)
        } else {
            displayCategories([])
        }
        
    } catch (error) {
        console.error('‚ùå Error loading categories:', error)
        displayCategories([])
    }
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô sidebar
function displayCategories(categories) {
    const categoryContainer = document.getElementById('category-buttons')
    
    if (!categoryContainer) {
        console.error('‚ùå Category container not found')
        return
    }
    
    if (!categories || categories.length === 0) {
        categoryContainer.innerHTML = '<p style="color: #999; font-size: 12px; text-align: center;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</p>'
        return
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const categoriesHTML = `
        <button class="category-btn" onclick="filterByCategory('all')">
            üìÇ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        </button>
        ${categories.map(category => `
            <button class="category-btn" onclick="filterByCategory('${category}')">
                üè∑Ô∏è ${category}
            </button>
        `).join('')}
    `
    
    categoryContainer.innerHTML = categoriesHTML
    
    console.log(`‚úÖ Displayed ${categories.length} categories`)
}

// ‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
function filterByCategory(category) {
    console.log(`üè∑Ô∏è Filtering by category: ${category}`)
    
    // ‡∏•‡∏ö active class ‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    document.querySelectorAll('.category-btn').forEach(btn => {
        btn.classList.remove('active')
    })
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° active class ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏î
    event.target.classList.add('active')
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    if (category === 'all') {
        displayProducts(allProducts)
    } else {
        const filteredProducts = allProducts.filter(product => product.category === category)
        displayProducts(filteredProducts)
    }
}


// =========================================
// Event Listeners
// =========================================

document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Products page loaded')
    
   
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ login
    checkAuth()
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö UI
    initPermissions()
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏õ‡∏∏‡πà‡∏° profile
    updateProfileButton()
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    loadProducts()
    
    loadCategories()  // ‚Üê ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

    // Navigation buttons
    document.getElementById('home-btn')?.addEventListener('click', goHome)
    document.getElementById('dashboard-btn')?.addEventListener('click', goToDashboard)
    document.getElementById('customers-btn')?.addEventListener('click', goToCustomers)
    document.getElementById('products-btn')?.addEventListener('click', goToProducts)
    document.getElementById('profile-btn')?.addEventListener('click', goToAdmin)
    
    // Add product button
    document.getElementById('add-product-btn')?.addEventListener('click', function() {
        console.log('üñ±Ô∏è Add product button clicked')
        openAddProductPopup()
    })
    
    // Close popup when clicking outside
    window.addEventListener('click', function(event) {
        const popup = document.getElementById('add-product-popup')
        if (event.target === popup) {
            closeAddProductPopup()
        }
    })
    
    console.log('‚úÖ Products page initialized with API integration')
})

