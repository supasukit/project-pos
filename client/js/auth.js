// =========================================
// Navigation Functions
// =========================================

// ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ register
function goToRegister () {
  window.location.href = '/register.html'
}

// ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
function goToLogin () {
  window.location.href = '/login.html'

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° focus ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
  setTimeout(() => {
    const usernameInput = document.getElementById('username')
    if (usernameInput) {
      usernameInput.focus()
    }
  }, 100)
}

// ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
function goToForgotPassword () {
  window.location.href = '/forgot-password.html'
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
function showForgotPassword () {
  goToForgotPassword()
}

// =========================================
// Utility Functions
// =========================================

// ‡πÅ‡∏™‡∏î‡∏á loading
function showLoading (buttonId) {
  const button = document.getElementById(buttonId)
  if (button) {
    button.disabled = true
    button.innerHTML = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...'
  }
}

// ‡∏ã‡πà‡∏≠‡∏ô loading
function hideLoading (buttonId, originalText) {
  const button = document.getElementById(buttonId)
  if (button) {
    button.disabled = false
    button.innerHTML = originalText
  }
}

// =========================================
// Register Functions
// =========================================

// ‡∏´‡∏•‡∏±‡∏Å register function
async function handleRegister (event) {
  event.preventDefault()

  console.log('Register form submitted!') // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å form
  const formData = {
    username: document.getElementById('username').value.trim(),
    email: document.getElementById('email').value.trim(),
    password: document.getElementById('password').value,
    owner_name: document.getElementById('owner_name').value.trim(),
    store_name: document.getElementById('store_name').value.trim(),
    store_phone: document.getElementById('store_phone').value.trim(),
    store_address: document.getElementById('store_address').value.trim()
  }

  console.log('Form data:', formData) // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö

  // Validation
  if (!validateRegisterForm(formData)) {
    return
  }

  try {
    showLoading('register-submit-btn')

    console.log('Sending request to API...') // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö

    const response = await fetch('/api/auth/register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })

    const result = await response.json()
    console.log('API Response:', result) // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö

    if (result.success) {
      alert('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...')

      // ‡∏£‡∏≠ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
      setTimeout(() => {
        goToLogin()
      }, 2000)
    } else {
      alert('Error: ' + result.message)
    }
  } catch (error) {
    console.error('Register error:', error)
    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠')
  } finally {
    hideLoading('register-submit-btn', '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å')
  }
}

// Validation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö register form
function validateRegisterForm (data) {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
  if (!data.username || !data.email || !data.password || !data.owner_name || !data.store_name) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô')
    return false
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
  if (data.password.length < 6) {
    alert('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£')
    return false
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö email format
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
  if (!emailRegex.test(data.email)) {
    alert('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Email ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
    return false
  }

  return true
}

// =========================================
// Login Functions
// =========================================

// ‡∏´‡∏•‡∏±‡∏Å login function
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleLogin ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå auth.js
async function handleLogin(event) {
  event.preventDefault()
  
  const username = document.getElementById('username').value.trim()
  const password = document.getElementById('password').value
  
  if (!username || !password) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Username ‡πÅ‡∏•‡∏∞ Password')
    return
  }
  
  try {
    showLoading('login-submit-btn')
    
    const response = await fetch('/api/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ username, password })
    })
    
    const result = await response.json()
    console.log('Login response:', result) // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
    
    if (result.success) {
      // ‡πÄ‡∏Å‡πá‡∏ö access token ‡πÅ‡∏•‡∏∞ refresh token
      localStorage.setItem('token', result.data.accessToken || result.data.token)
      if (result.data.refreshToken) {
        localStorage.setItem('refreshToken', result.data.refreshToken)
      }
      
      // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user
      const userData = result.data.user
      localStorage.setItem('user', JSON.stringify(userData))
      
      alert('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
      
      // Redirect ‡∏ï‡∏≤‡∏° role
      setTimeout(() => {
        window.location.href = '/pages/pos/index.html'
      }, 1000)
      
    } else {
      alert('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + result.message)
    }
  } catch (error) {
    console.error('Login error:', error)
    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠')
  } finally {
    hideLoading('login-submit-btn', '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö')
  }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô refresh token
async function refreshAccessToken() {
  const refreshToken = localStorage.getItem('refreshToken')
  
  if (!refreshToken) {
    window.location.href = '/login.html'
    return null
  }
  
  try {
    const response = await fetch('/api/auth/refresh', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ refreshToken })
    })
    
    const result = await response.json()
    
    if (result.success) {
      localStorage.setItem('token', result.data.accessToken)
      if (result.data.refreshToken) {
        localStorage.setItem('refreshToken', result.data.refreshToken)
      }
      return result.data.accessToken
    } else {
      localStorage.clear()
      window.location.href = '/login.html'
      return null
    }
  } catch (error) {
    console.error('Refresh token error:', error)
    localStorage.clear()
    window.location.href = '/login.html'
    return null
  }
}

// =========================================
// Forgot Password Functions
// =========================================

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö forgot password form
async function handleForgotPassword (event) {
  event.preventDefault()

  const email = document.getElementById('email').value.trim()

  if (!email) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Email')
    return
  }

  try {
    showLoading('forgot-submit-btn')

    const response = await fetch('/api/auth/forgot-password', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ email })
    })

    const result = await response.json()

    if (result.success) {
      document.getElementById('result').style.color = 'green'
      document.getElementById('result').textContent = '‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á Email ‡πÅ‡∏•‡πâ‡∏ß'
    } else {
      document.getElementById('result').style.color = 'crimson'
      document.getElementById('result').textContent = result.message
    }
  } catch (error) {
    console.error('Forgot password error:', error)
    document.getElementById('result').style.color = 'crimson'
    document.getElementById('result').textContent = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Email'
  } finally {
    hideLoading('forgot-submit-btn', '‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô')
  }
}

// ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleResetPassword ‡πÉ‡∏ô auth.js (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô Debug)
async function handleResetPassword(event) {
  event.preventDefault()
  
  try {
    // ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å URL
    const urlParams = new URLSearchParams(window.location.search)
    const token = urlParams.get('token')
    
    console.log('üîç Debug info:')
    console.log('- Token from URL:', token ? token.substring(0, 20) + '...' : 'NOT FOUND')
    
    if (!token) {
      document.getElementById('reset-result').textContent = '‡πÑ‡∏°‡πà‡∏û‡∏ö token ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'
      document.getElementById('reset-result').className = 'error'
      return
    }
    
    // ‡∏•‡∏≠‡∏á‡∏´‡∏≤ input field ‡∏ó‡∏±‡πâ‡∏á 2 ‡πÅ‡∏ö‡∏ö
    let newPasswordField = document.getElementById('newPassword') || 
                          document.getElementById('new-password') ||
                          document.querySelector('input[type="password"]')
    
    if (!newPasswordField) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö password input field')
      alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö')
      return
    }
    
    const newPassword = newPasswordField.value.trim()
    console.log('- Password length:', newPassword.length)
    console.log('- Password (first 3 chars):', newPassword.substring(0, 3) + '***')
    
    if (!newPassword) {
      document.getElementById('reset-result').textContent = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà'
      document.getElementById('reset-result').className = 'error'
      return
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡∏≤‡∏° backend validation
    if (newPassword.length < 8) {
      document.getElementById('reset-result').textContent = '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£'
      document.getElementById('reset-result').className = 'error'
      return
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡∏ï‡∏≤‡∏° backend validation)
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/
    if (!passwordRegex.test(newPassword)) {
      document.getElementById('reset-result').textContent = '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢: ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å, ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà, ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç, ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏© (@$!%*?&)'
      document.getElementById('reset-result').className = 'error'
      return
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á loading
    const button = document.getElementById('reset-submit-btn')
    if (button) {
      button.disabled = true
      button.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï...'
    }
    
    // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏á
    const requestData = {
      token: token,
      newPassword: newPassword
    }
    
    console.log('üì§ Sending request data:', {
      token: token.substring(0, 10) + '...',
      newPassword: '***'
    })
    
    const response = await fetch('/api/auth/reset-password', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(requestData)
    })
    
    const result = await response.json()
    console.log('üì• Full response:', result)
    
    // ‡πÅ‡∏™‡∏î‡∏á error details ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (result.errors && result.errors.length > 0) {
      console.log('‚ùå Validation errors:', result.errors)
      result.errors.forEach((error, index) => {
        console.log(`  ${index + 1}. ${error.msg || error.message || error}`)
      })
    }
    
    if (result.success) {
      document.getElementById('reset-result').textContent = '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...'
      document.getElementById('reset-result').className = 'success'
      
      setTimeout(() => {
        window.location.href = '/login.html'
      }, 2000)
    } else {
      // ‡πÅ‡∏™‡∏î‡∏á error message ‡∏ó‡∏µ‡πà‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
      let errorMessage = result.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏'
      
      if (result.errors && result.errors.length > 0) {
        const firstError = result.errors[0]
        errorMessage = firstError.msg || firstError.message || firstError
      }
      
      document.getElementById('reset-result').textContent = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + errorMessage
      document.getElementById('reset-result').className = 'error'
    }
    
  } catch (error) {
    console.error('‚ùå Reset password error:', error)
    document.getElementById('reset-result').textContent = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'
    document.getElementById('reset-result').className = 'error'
  } finally {
    // ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°
    const button = document.getElementById('reset-submit-btn')
    if (button) {
      button.disabled = false
      button.textContent = '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'
    }
  }
}

// ‡πÅ‡∏™‡∏î‡∏á modal ‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
function showForgotPasswordModal () {
  document.getElementById('forgot-password-modal').style.display = 'block'
}

// ‡∏õ‡∏¥‡∏î modal ‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
function closeForgotPasswordModal () {
  document.getElementById('forgot-password-modal').style.display = 'none'
  document.getElementById('forgot-email').value = ''
}

// =========================================
// Role-Based Access Control Functions
// =========================================

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
function checkPageAccess (requiredRole = null) {
  const user = JSON.parse(localStorage.getItem('user') || '{}')
  const currentPath = window.location.pathname

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
  if (!localStorage.getItem('token')) {
    window.location.href = '/login.html'
    return false
  }

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤
  const pagePermissions = {
    '/pages/pos/index.html': ['user', 'employee'], // ‡∏ó‡∏±‡πâ‡∏á user ‡πÅ‡∏•‡∏∞ employee ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ
    '/pages/admin/dashboard.html': ['user'], // ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user
    '/pages/customer/customers.html': ['user'], // ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user
    '/pages/product/products.html': ['user', 'employee'], // ‡∏ó‡∏±‡πâ‡∏á user ‡πÅ‡∏•‡∏∞ employee
    '/pages/admin/admin.html': ['user', 'employee'], // ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
    '/pages/admin/add-employee.html': ['user'], // ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user
    '/pages/admin/manage-employees.html': ['user'] // ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  const allowedRoles = pagePermissions[currentPath]

  if (allowedRoles && !allowedRoles.includes(user.role)) {
    alert('‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ')

    // Redirect ‡∏ï‡∏≤‡∏° role
    if (user.role === 'employee') {
      window.location.href = '/pages/pos/index.html'
    } else {
      window.location.href = '/login.html'
    }

    return false
  }

  return true
}

// ‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏° role
function adjustMenuByRole () {
  const user = JSON.parse(localStorage.getItem('user') || '{}')

  if (user.role === 'employee') {
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏´‡πá‡∏ô
    const dashboardBtn = document.getElementById('dashboard-btn')
    const customersBtn = document.getElementById('customers-btn')
    const addEmployeeBtn = document.getElementById('add-employee-btn')
    const manageEmployeesBtn = document.getElementById('manage-employees-btn')

    if (dashboardBtn) dashboardBtn.style.display = 'none'
    if (customersBtn) customersBtn.style.display = 'none'
    if (addEmployeeBtn) addEmployeeBtn.style.display = 'none'
    if (manageEmployeesBtn) manageEmployeesBtn.style.display = 'none'
  }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô handleLogin function ‡∏´‡∏•‡∏±‡∏á login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
// (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å localStorage.setItem('user', ...))
if (result.data.user.role === 'employee') {
  // ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ POS ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  window.location.href = '/pages/pos/index.html'
} else {
  // user ‡∏õ‡∏Å‡∏ï‡∏¥‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ POS
  window.location.href = '/pages/pos/index.html'
}
