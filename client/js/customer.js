// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
let allCustomers = []
// =========================================
// Navigation Functions
// =========================================

function goToDashboard() {
    window.location.href = '/pages/admin/dashboard.html'
}

function goHome() {
    window.location.href = '/pages/pos/index.html'
}

function goToCustomers() {
    window.location.href = '/pages/customer/customers.html'
}

function goToProducts() {
    window.location.href = '/pages/product/products.html'
}

function goToAdmin() {
    window.location.href = '/pages/admin/admin.html'
}



// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
function displayNoCustomers() {
    const customerList = document.getElementById('customer-list')
    if (customerList) {
        customerList.innerHTML = `
            <div class="no-customers">
                <h3>üë• ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h3>
                <p>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢</p>
                <button onclick="loadCustomers()" style="padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;">
                    üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
                </button>
            </div>
        `
    }
}



// ‡∏õ‡∏¥‡∏î popup
function closePopup() {
    const popup = document.getElementById('popup')
    if (popup) {
        popup.classList.add('hidden')
    }
}

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô showOrderHistory ‡πÄ‡∏î‡∏¥‡∏° (‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 106)
async function showOrderHistory(customerId) {
    try {
        console.log(`üìã Loading order history for customer: ${customerId}`)
        
        const token = localStorage.getItem('token')
        const response = await fetch(`/api/customers/${customerId}/orders`, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        })
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`)
        }
        
        const result = await response.json()
        console.log('üì• Order history loaded:', result)
        
        if (result.success && result.data) {
            displayOrderHistory(result.data, customerId)
        } else {
            alert('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠')
        }
        
    } catch (error) {
        console.error('‚ùå Error loading order history:', error)
        alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠')
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
function displayOrderHistory(orders, customerId) {
    const popupInfo = document.getElementById('popup-info')
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° active class
    document.querySelectorAll('.customer-card').forEach(card => {
        card.classList.remove('active')
    })
    document.querySelector(`[data-id="${customerId}"]`)?.classList.add('active')
    
    if (!orders || orders.length === 0) {
        popupInfo.innerHTML = `
            <div class="order-history">
                <h2>üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠</h2>
                <p style="text-align: center; padding: 20px; color: #666;">
                    ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠
                </p>
                <button onclick="goBack()" class="btn-back">üîô ‡∏Å‡∏•‡∏±‡∏ö</button>
            </div>
        `
        return
    }
    
    const ordersHTML = orders.map(order => {
        const orderDate = new Date(order.order_date).toLocaleDateString('th-TH')
        const orderTime = new Date(order.order_date).toLocaleTimeString('th-TH')
        const statusClass = order.payment_status === 'paid' ? 'paid' : 'unpaid'
        const statusText = order.payment_status === 'paid' ? '‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß' : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ä‡∏≥‡∏£‡∏∞'
        
        return `
            <div class="order-item" onclick="showOrderDetail('${order._id}')" style="border: 1px solid #ddd; margin: 10px 0; padding: 15px; border-radius: 8px; cursor: pointer;">
                <div class="order-header" style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                    <span class="order-number" style="font-weight: bold;">#${order.order_number}</span>
                    <span class="order-date">${orderDate} ${orderTime}</span>
                </div>
                <div class="order-details">
                    <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</strong> ${order.total_items} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                    <p><strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> ‡∏ø${order.total_amount.toLocaleString()}</p>
                    <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> ${order.payment_type === 'cash' ? 'üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î' : 'üí≥ ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï'}</p>
                    <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> 
                        <span class="status ${statusClass}" style="color: ${statusClass === 'paid' ? 'green' : 'red'};">${statusText}</span>
                    </p>
                </div>
            </div>
        `
    }).join('')
    
    popupInfo.innerHTML = `
        <div class="order-history">
            <h2>üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠</h2>
            <div class="orders-list">
                ${ordersHTML}
            </div>
            <div class="history-actions" style="margin-top: 20px;">
                <button onclick="goBack()" class="btn-back" style="padding: 10px 20px; background: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer;">üîô ‡∏Å‡∏•‡∏±‡∏ö</button>
            </div>
        </div>
    `
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ
function goBack() {
    const customerId = document.querySelector('.customer-card.active')?.getAttribute('data-id')
    if (customerId) {
        showCustomerDetails(customerId)
    } else {
        closePopup()
    }
}

function showOrderDetail(orderId) {
    alert('üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ö‡∏¥‡∏• (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤)')
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
function displayOrderHistory(orders, customerId) {
    const popupInfo = document.getElementById('popup-info')
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° active class
    document.querySelectorAll('.customer-card').forEach(card => {
        card.classList.remove('active')
    })
    document.querySelector(`[data-id="${customerId}"]`)?.classList.add('active')
    
    if (!orders || orders.length === 0) {
        popupInfo.innerHTML = `
            <div class="order-history">
                <h2>üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠</h2>
                <p style="text-align: center; padding: 20px; color: #666;">
                    ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠
                </p>
                <button onclick="goBack()" class="btn-back">üîô ‡∏Å‡∏•‡∏±‡∏ö</button>
            </div>
        `
        return
    }
    
    const ordersHTML = orders.map(order => {
        const orderDate = new Date(order.order_date).toLocaleDateString('th-TH')
        const orderTime = new Date(order.order_date).toLocaleTimeString('th-TH')
        const statusClass = order.payment_status === 'paid' ? 'paid' : 'unpaid'
        const statusText = order.payment_status === 'paid' ? '‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß' : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ä‡∏≥‡∏£‡∏∞'
        
        return `
            <div class="order-item" onclick="showOrderDetail('${order._id}')" style="border: 1px solid #ddd; margin: 10px 0; padding: 15px; border-radius: 8px; cursor: pointer;">
                <div class="order-header" style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                    <span class="order-number" style="font-weight: bold;">#${order.order_number}</span>
                    <span class="order-date">${orderDate} ${orderTime}</span>
                </div>
                <div class="order-details">
                    <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</strong> ${order.total_items} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                    <p><strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> ‡∏ø${order.total_amount.toLocaleString()}</p>
                    <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> ${order.payment_type === 'cash' ? 'üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î' : 'üí≥ ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï'}</p>
                    <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> 
                        <span class="status ${statusClass}" style="color: ${statusClass === 'paid' ? 'green' : 'red'};">${statusText}</span>
                    </p>
                </div>
            </div>
        `
    }).join('')
    
    popupInfo.innerHTML = `
        <div class="order-history">
            <h2>üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠</h2>
            <div class="orders-list">
                ${ordersHTML}
            </div>
            <div class="history-actions" style="margin-top: 20px;">
                <button onclick="goBack()" class="btn-back" style="padding: 10px 20px; background: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer;">üîô ‡∏Å‡∏•‡∏±‡∏ö</button>
            </div>
        </div>
    `
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ
function goBack() {
    const customerId = document.querySelector('.customer-card.active')?.getAttribute('data-id')
    if (customerId) {
        showCustomerDetails(customerId)
    } else {
        closePopup()
    }
}

function showOrderDetail(orderId) {
    alert('üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ö‡∏¥‡∏• (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤)')
}

// ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
function showPaymentHistory(customerId) {
    console.log(`üí≥ Loading payment history for customer: ${customerId}`)
    alert('üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤)')
    // TODO: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
}

function makePayment() {
    console.log(`üí∞ Opening payment popup...`)
    showPaymentPopup()
}

// 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á popup ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
function showPaymentPopup() {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á popup element
    const popup = document.createElement('div')
    popup.id = 'payment-popup'
    popup.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    `
    
    popup.innerHTML = `
        <div style="background: white; padding: 30px; border-radius: 12px; max-width: 500px; width: 90%; box-shadow: 0 4px 20px rgba(0,0,0,0.3);">
            <h2 style="text-align: center; color: #333; margin-bottom: 20px;">üí≥ ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞</h2>
            
            <div style="margin-bottom: 20px;">
                <label for="payment-customer-search" style="display: block; margin-bottom: 8px; font-weight: bold;">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</label>
                <input type="text" id="payment-customer-search" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤..." 
                       style="width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px;" />
            </div>
            
            <div id="payment-customer-info" style="margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 6px; min-height: 60px; display: flex; align-items: center; justify-content: center; color: #666;">
                ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞
            </div>
            
            <div style="margin-bottom: 20px;">
                <label for="payment-amount" style="display: block; margin-bottom: 8px; font-weight: bold;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞:</label>
                <input type="number" id="payment-amount" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô" min="0" step="0.01"
                       style="width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px;" />
            </div>
            
            <div style="margin-bottom: 20px;">
                <label for="payment-notes" style="display: block; margin-bottom: 8px; font-weight: bold;">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö):</label>
                <textarea id="payment-notes" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞ ‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà 1" rows="3"
                          style="width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px; resize: vertical;"></textarea>
            </div>
            
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button id="confirm-payment-btn" 
                        style="background: #28a745; color: white; padding: 12px 25px; border: none; border-radius: 6px; cursor: pointer; font-size: 16px; font-weight: bold;">
                    ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞
                </button>
                <button onclick="closePaymentPopup()" 
                        style="background: #dc3545; color: white; padding: 12px 25px; border: none; border-radius: 6px; cursor: pointer; font-size: 16px; font-weight: bold;">
                    ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                </button>
            </div>
        </div>
    `
    
    document.body.appendChild(popup)
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners
    document.getElementById('payment-customer-search').addEventListener('input', searchCustomerForPayment)
    document.getElementById('confirm-payment-btn').addEventListener('click', processPaymentFromPopup)
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    document.getElementById('payment-customer-search').focus()
}

// 3. ‡∏õ‡∏¥‡∏î popup ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
function closePaymentPopup() {
    const popup = document.getElementById('payment-popup')
    if (popup) {
        popup.remove()
    }
}

// 4. ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
let selectedPaymentCustomer = null

// 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
function searchCustomerForPayment() {
    const searchValue = document.getElementById('payment-customer-search').value.trim()
    const customerInfo = document.getElementById('payment-customer-info')
    const paymentAmountInput = document.getElementById('payment-amount')
    
    if (!searchValue) {
        customerInfo.innerHTML = '‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞'
        customerInfo.style.color = '#666'
        selectedPaymentCustomer = null
        paymentAmountInput.value = ''
        return
    }
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞
    const foundCustomer = allCustomers.find(customer => {
        const hasDebt = (customer.credit_balance || 0) > 0
        const matchName = customer.name.toLowerCase().includes(searchValue.toLowerCase())
        const matchPhone = customer.phone.includes(searchValue)
        
        return hasDebt && (matchName || matchPhone)
    })
    
    if (foundCustomer) {
        selectedPaymentCustomer = foundCustomer
        customerInfo.innerHTML = `
            <div>
                <div style="font-weight: bold; color: #28a745; margin-bottom: 8px;">‚úÖ ‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</div>
                <div><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> ${foundCustomer.name}</div>
                <div><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå:</strong> ${foundCustomer.phone}</div>
                <div style="margin-top: 8px;"><strong>‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞:</strong> 
                    <span style="color: #dc3545; font-weight: bold; font-size: 16px;">‡∏ø${foundCustomer.credit_balance.toLocaleString()}</span>
                </div>
            </div>
        `
        customerInfo.style.color = '#333'
        
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡∏≠‡∏î‡πÄ‡∏ï‡πá‡∏°
        paymentAmountInput.value = foundCustomer.credit_balance
        paymentAmountInput.max = foundCustomer.credit_balance
        
    } else {
        selectedPaymentCustomer = null
        customerInfo.innerHTML = `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ "${searchValue}" ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞`
        customerInfo.style.color = '#dc3545'
        paymentAmountInput.value = ''
    }
}

// 6. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å popup
async function processPaymentFromPopup() {
    if (!selectedPaymentCustomer) {
        alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô')
        return
    }
    
    const paymentAmount = parseFloat(document.getElementById('payment-amount').value)
    const notes = document.getElementById('payment-notes').value.trim()
    
    if (!paymentAmount || paymentAmount <= 0) {
        alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
        return
    }
    
    if (paymentAmount > selectedPaymentCustomer.credit_balance) {
        alert('‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞')
        return
    }
    
    const confirmMessage = `‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô?

üè∑Ô∏è ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${selectedPaymentCustomer.name}
üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ‡∏ø${paymentAmount.toLocaleString()}
üìã ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ${notes || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}

üí≥ ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏ä‡∏≥‡∏£‡∏∞: ‡∏ø${(selectedPaymentCustomer.credit_balance - paymentAmount).toLocaleString()}`
    
    if (!confirm(confirmMessage)) {
        return
    }
    
    try {
        console.log(`üí∞ Processing payment: ${paymentAmount} for ${selectedPaymentCustomer.name}`)
        
        // ‡πÅ‡∏™‡∏î‡∏á loading
        document.getElementById('confirm-payment-btn').innerHTML = '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...'
        document.getElementById('confirm-payment-btn').disabled = true
        
        const token = localStorage.getItem('token')
        const response = await fetch(`/api/customers/${selectedPaymentCustomer._id}/payment`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                amount: paymentAmount,
                payment_method: 'cash',
                notes: notes || '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞'
            })
        })
        
        const result = await response.json()
        
        if (result.success) {
            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            const successMessage = `‚úÖ ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!

üè∑Ô∏è ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${selectedPaymentCustomer.name}
üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö: ‡∏ø${paymentAmount.toLocaleString()}
üí≥ ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ‡∏ø${result.data.remaining_balance.toLocaleString()}

${result.data.remaining_balance === 0 ? 'üéâ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß!' : ''}`
            
            alert(successMessage)
            
            // ‡∏õ‡∏¥‡∏î popup
            closePaymentPopup()
            
            // ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
            loadCustomers()
            
        } else {
            alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + result.message)
        }
        
    } catch (error) {
        console.error('‚ùå Payment error:', error)
        alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô')
    } finally {
        // ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°
        document.getElementById('confirm-payment-btn').innerHTML = '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞'
        document.getElementById('confirm-payment-btn').disabled = false
    }
}




// =========================================
// Auth Functions
// =========================================

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ login
function checkAuth() {
    const token = localStorage.getItem('token')
    if (!token) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô')
        window.location.href = '/login.html'
        return false
    }
    return true
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏õ‡∏∏‡πà‡∏° profile
function updateProfileButton() {
    const user = JSON.parse(localStorage.getItem('user') || '{}')
    const profileBtn = document.getElementById('profile-btn')
    
    if (profileBtn && user.username) {
        profileBtn.textContent = `üë§ ${user.username}`
    }
}

// =========================================
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô loadCustomers ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
// =========================================

async function loadCustomers() {
    try {
        console.log('üîÑ Loading customers from API...')
        
        const token = localStorage.getItem('token')
        const response = await fetch('/api/customers', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        })
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`)
        }
        
        const result = await response.json()
        console.log('üì• Customers loaded:', result)
        
        if (result.success && result.data) {
            allCustomers = result.data
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
            displayCustomerStats()
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            if (currentFilter === 'cash') {
                showCashCustomers()
            } else if (currentFilter === 'pending') {
                showPendingCustomers()
            } else {
                displayCustomers(result.data)
            }
        } else {
            displayNoCustomers()
        }
        
    } catch (error) {
        console.error('‚ùå Error loading customers:', error)
        displayNoCustomers()
    }
}
// =========================================
// Filter Functions
// =========================================

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
let currentFilter = 'all'

// ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function showAllCustomers() {
    currentFilter = 'all'
    displayCustomers(allCustomers)
    updateFilterButtons()
    console.log('üìã Showing all customers')
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
function showCashCustomers() {
    currentFilter = 'cash'
    const cashCustomers = allCustomers.filter(customer => {
        const creditBalance = customer.credit_balance || 0
        return creditBalance === 0
    })
    displayCustomers(cashCustomers)
    updateFilterButtons()
    console.log(`üí∞ Showing ${cashCustomers.length} cash customers`)
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞
function showPendingCustomers() {
    currentFilter = 'pending'
    const pendingCustomers = allCustomers.filter(customer => {
        const creditBalance = customer.credit_balance || 0
        return creditBalance > 0
    })
    displayCustomers(pendingCustomers)
    updateFilterButtons()
    console.log(`‚è∞ Showing ${pendingCustomers.length} pending customers`)
}

// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏£‡∏≠‡∏á
function updateFilterButtons() {
    // ‡∏•‡∏ö active class ‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    document.querySelectorAll('.sidebar .user').forEach(btn => {
        btn.classList.remove('active')
    })
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° active class ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if (currentFilter === 'all') {
        // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡πÉ‡∏ô HTML ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
    } else if (currentFilter === 'cash') {
        document.getElementById('cash-customers-btn')?.classList.add('active')
    } else if (currentFilter === 'pending') {
        document.getElementById('pending-customers-btn')?.classList.add('active')
    }
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
function displayCustomerStats() {
    const totalCustomers = allCustomers.length
    const cashCustomers = allCustomers.filter(c => (c.credit_balance || 0) === 0).length
    const pendingCustomers = allCustomers.filter(c => (c.credit_balance || 0) > 0).length
    const totalDebt = allCustomers.reduce((sum, c) => sum + (c.credit_balance || 0), 0)
    
    console.log(`üìä Customer Stats:
    - Total: ${totalCustomers}
    - Cash: ${cashCustomers}
    - Pending: ${pendingCustomers}
    - Total Debt: ‡∏ø${totalDebt.toLocaleString()}`)
}

// =========================================
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô displayCustomers ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
// =========================================

function displayCustomers(customers) {
    const customerList = document.getElementById('customer-list')
    
    if (!customerList) {
        console.error('‚ùå Customer list container not found')
        return
    }
    
    if (!customers || customers.length === 0) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
        let message = ''
        if (currentFilter === 'cash') {
            message = `
                <h3>üí∞ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î</h3>
                <p>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞</p>
            `
        } else if (currentFilter === 'pending') {
            message = `
                <h3>‚è∞ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞</h3>
                <p>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß</p>
            `
        } else {
            message = `
                <h3>üë• ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h3>
                <p>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢</p>
            `
        }
        
        customerList.innerHTML = `
            <div class="no-customers">
                ${message}
                <button onclick="loadCustomers()" style="padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;">
                    üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
                </button>
            </div>
        `
        return
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    const customersHTML = customers.map(customer => {
        const creditAmount = customer.credit_balance || 0
        const creditClass = creditAmount > 0 ? 'has-credit' : 'no-credit'
        
        return `
            <div class="customer-card ${creditClass}" onclick="showCustomerDetails('${customer._id}')" data-id="${customer._id}">
                <div class="customer-info">
                    <h3 class="customer-name">${customer.name}</h3>
                    <p class="customer-phone">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå ${customer.phone}</p>
                    <p class="customer-address">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ${customer.address || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà'}</p>
                    <div class="customer-credit">
                        <span class="credit-label">‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞:</span>
                        <span class="credit-amount ${creditAmount > 0 ? 'has-debt' : 'no-debt'}">
                            ‡∏ø${creditAmount.toLocaleString()}
                        </span>
                    </div>
                </div>
                <div class="customer-status">
                    ${creditAmount > 0 ? 
                        '<span class="status-badge credit">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞</span>' : 
                        '<span class="status-badge cash">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î</span>'
                    }
                </div>
            </div>
        `
    }).join('')
    
    customerList.innerHTML = customersHTML
    
    console.log(`‚úÖ Displayed ${customers.length} customers`)
}

// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
function displayNoCustomers() {
    const customerList = document.getElementById('customer-list')
    if (customerList) {
        customerList.innerHTML = `
            <div class="no-customers">
                <h3>üë• ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h3>
                <p>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢</p>
                <button onclick="loadCustomers()" style="padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;">
                    üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
                </button>
            </div>
        `
    }
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô popup (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ)
function showCustomerDetails(customerId) {
    const customer = allCustomers.find(c => c._id === customerId)
    
    if (!customer) {
        alert('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤')
        return
    }
    
    console.log(`üëÅÔ∏è Showing details for: ${customer.name}`)
    
    const popup = document.getElementById('popup')
    const popupInfo = document.getElementById('popup-info')
    
    if (!popup || !popupInfo) {
        console.error('‚ùå Popup elements not found')
        return
    }
    
    const creditAmount = customer.credit_balance || 0
    const totalPurchases = customer.total_purchases || 0
    const totalAmount = customer.total_amount || 0
    
    popupInfo.innerHTML = `
        <div class="customer-details">
            <h2> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h2>
            
            <div class="detail-section">
                <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</h3>
                <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> ${customer.name}</p>
                <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> ${customer.phone}</p>
                <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> ${customer.address || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
            </div>
            
            <div class="detail-section">
                <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô</h3>
                <p><strong>‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞:</strong> 
                    <span class="${creditAmount > 0 ? 'debt-amount' : 'no-debt-amount'}">
                        ‡∏ø${creditAmount.toLocaleString()}
                    </span>
                </p>
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠:</strong> ${totalPurchases.toLocaleString()} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                <p><strong>‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡∏ß‡∏°:</strong> ‡∏ø${totalAmount.toLocaleString()}</p>
            </div>
            
            <div class="detail-actions">
                <button onclick="showOrderHistory('${customer._id}')" class="btn-history">
                     ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠
                </button>
                <button onclick="showPaymentHistory('${customer._id}')" class="btn-payments">
                     ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞
                </button>
            </div>
        </div>
    `
    
    popup.classList.remove('hidden')
}

// ‡∏õ‡∏¥‡∏î popup
function closePopup() {
    const popup = document.getElementById('popup')
    if (popup) {
        popup.classList.add('hidden')
    }
}



// ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
function showPaymentHistory(customerId) {
    console.log(`üí≥ Loading payment history for customer: ${customerId}`)
    alert('üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤)')
    // TODO: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
}





// =========================================
// Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Navigation
// =========================================

document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Customer page loaded')

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ login
    checkAuth()
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    updateProfileButton()

    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    loadCustomers()
    
    // Navigation buttons
    document.getElementById('home-btn')?.addEventListener('click', goHome)
    document.getElementById('dashboard-btn')?.addEventListener('click', goToDashboard)
    document.getElementById('customers-btn')?.addEventListener('click', goToCustomers)
    document.getElementById('products-btn')?.addEventListener('click', goToProducts)
    document.getElementById('profile-btn')?.addEventListener('click', goToAdmin)
    
    // Filter buttons
    document.getElementById('cash-customers-btn')?.addEventListener('click', showCashCustomers)
    document.getElementById('pending-customers-btn')?.addEventListener('click', showPendingCustomers)

       // ‚≠ê Payment button - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å popup
    document.getElementById('payment-btn')?.addEventListener('click', function() {
        console.log('üí≥ Payment button clicked')
        makePayment() // ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å showPaymentPopup()
    })
    
    console.log('‚úÖ Navigation initialized')
})